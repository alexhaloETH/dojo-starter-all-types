// Generated by dojo-bindgen on Thu, 29 Aug 2024 01:27:58 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;

// Type definition for `dojo_starter_all_types::models::all_types::AttackHit` struct
[Serializable]
public struct AttackHit {
    public byte damage;
    public byte stun;
    public bool critical;
}

// Type definition for `dojo_starter_all_types::models::all_types::AttackEffect` enum
public abstract record AttackEffect() : Enum {
    public record Failed() : AttackEffect;
    public record Stunned() : AttackEffect;
    public record Miss() : AttackEffect;
    public record Hit(AttackHit value) : AttackEffect;
}


namespace dojo_starter_all_types {
    // Model definition for `dojo_starter_all_types::models::all_types::AttackResult` model
    public class AttackResult : ModelInstance {
        [ModelField("combatant_id")]
        public BigInteger combatant_id;

        [ModelField("round")]
        public uint round;

        [ModelField("attack_id")]
        public BigInteger attack_id;

        [ModelField("target")]
        public BigInteger target;

        [ModelField("effect")]
        public AttackEffect effect;

        // Start is called before the first frame update
        void Start() {
        }
    
        // Update is called once per frame
        void Update() {
        }
    }
}

        